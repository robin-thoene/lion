name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
  workflow_dispatch:

env:
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_KEY }}
  SSH_HOST: ${{ secrets.SSH_HOST }}
  IMAGE_TAG: ${{ secrets.REGISTRY }}/lion:latest
  CONTAINER_NAME: lion
  CONTAINER_NETWORK: ${{ secrets.CONTAINER_NETWORK }}
  LOCAL_SSH_KEY_PATH: ~/.ssh/id_rsa
  KNOWN_HOSTS_PATH: ~/.ssh/known_hosts
  SYSTEMCTL_SERVICE_NAME: container-lion.service

jobs:
  build:
    name: Run the latest container image
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          touch ${{ env.LOCAL_SSH_KEY_PATH }}
          touch ${{ env.KNOWN_HOSTS_PATH }}
          echo "${{ env.SSH_KEY }}" >> ${{ env.LOCAL_SSH_KEY_PATH }}
          chmod 400 ${{ env.LOCAL_SSH_KEY_PATH }}
          ssh-keyscan ${{ env.SSH_HOST }} >> ${{ env.KNOWN_HOSTS_PATH }}
      - name: Run latest container
        run: |
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'podman pull ${{ env.IMAGE_TAG }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'systemctl --user stop ${{ env.SYSTEMCTL_SERVICE_NAME }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'systemctl --user disable --now ${{ env.SYSTEMCTL_SERVICE_NAME }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'rm .config/systemd/user/${{ env.SYSTEMCTL_SERVICE_NAME }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'podman rm ${{ env.CONTAINER_NAME }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'podman run -d --name ${{ env.CONTAINER_NAME }} --network ${{ env.CONTAINER_NETWORK }} ${{ env.IMAGE_TAG }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'podman generate systemd --new --name ${{ env.CONTAINER_NAME }} -f'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'mv ${{ env.SYSTEMCTL_SERVICE_NAME }} .config/systemd/user'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'systemctl --user enable ${{ env.SYSTEMCTL_SERVICE_NAME }}'
          ssh ${{ env.SSH_USER }}@${{ env.SSH_HOST }} 'systemctl --user daemon-reload'
      - name: Cleanup SSH
        if: always()
        run: |
          rm ${{ env.LOCAL_SSH_KEY_PATH }}
          rm ${{ env.KNOWN_HOSTS_PATH }}
